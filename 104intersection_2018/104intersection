#!/usr/bin/env python3

import sys
from math import *

def print_result(a, b, delta, xp, yp, zp, xv, yv, zv, p):
    print("Line passing through the point (", end = "")
    print(xp, end = ", ")
    print(yp, end = ", ")
    print(zp, end = ") and parallel to the vector (")
    print(xv, end =", ")
    print(yv, end = ", ")
    print(zv, end = ")\n")
    if a == 0 and delta >= 0 :
        print("There is an infinite number of intersection points.")
    else :
        if delta < 0 :
            print("No intersection point.")
        if delta == 0 :
            print("1 intersection point:")
            x1 = -b / (2 * a)
            print("(", end = "")
            print("%.3f" % (xp + x1 * xv), end = ", ")
            print("%.3f" % (yp + x1 * yv), end = ", ")
            print("%.3f" % (zp + x1 * zv), end = ")\n")
        if delta > 0 :
            print("2 intersection points:");
            x1 = (-b + sqrt(delta)) / (2 * a)
            x2 = (-b - sqrt(delta)) / (2 * a)
            xp1 = xp + x1 * xv
            yp1 = yp + x1 * yv
            zp1 = zp + x1 * zv
            xp2 = xp + x2 * xv
            yp2 = yp + x2 * yv
            zp2 = zp + x2 * zv
            print("(", end = "")
            print("%.3f" % xp1, end = ", ")
            print("%.3f" % yp1, end = ", ")
            print("%.3f" % zp1, end = ")\n")
            print("(", end = "")
            print("%.3f" % xp2, end = ", ")
            print("%.3f" % yp2, end = ", ")
            print("%.3f" % zp2, end = ")\n")

def cylinder(xp, yp, zp, xv, yv, zv, p):
    a = xv**2 + yv**2
    b = (2 * xp * xv) + (2 * yp * yv)
    c = (xp**2 + yp**2) - p**2
    delta = b * b - 4 * a * c
    print_result(a, b, delta, xp, yp, zp, xv, yv, zv, p)

def cone(xp, yp, zp, xv, yv, zv, p):
    angle = (p * pi) / 180
    a = (xv**2 + yv**2) - zv**2 * (tan(angle) * tan(angle))
    b = ((2 * xp * xv) + (2 * yp * yv)) - (2 * zp * zv) * (tan(angle) * tan(angle))
    c = (xp**2 + yp**2) - zp**2 * (tan(angle) * tan(angle))
    delta = b * b - 4 * a * c
    print_result(a, b, delta, xp, yp, zp, xv, yv, zv, p)

def sphere(xp, yp, zp, xv, yv, zv, p):
    a = xv**2 + yv**2 + zv**2
    b = (2 * xp * xv) + (2 * yp * yv) + (2 * zp * zv)
    c = (xp**2 + yp**2 + zp**2 - p**2)
    delta = b * b - 4 * a * c
    print_result(a, b, delta, xp, yp, zp, xv, yv, zv, p)

def print_help():
    print("USAGE")
    print("\t./104intersection opt xp yp zp xv yv zv p\n")
    print("DESCRIPTION")
    print("\topt\t\tsurface option: 1 for a sphere, 2 for a cylinder, 3 for a cone")
    print("\t(xp, yp, zp)\tcoordinates of a point by which the light ray passes through")
    print("\t(xv, yv, zv)\tcoordinates of a vector parallel to the light ray")
    print("\tp\t\tparameter: radius of the sphere, radius of the cylinder, or")
    print("\t\t\tangle formed by the cone and the Z-axis")
    exit(0)

def check_args():
    if len(sys.argv) <= 1:
        exit(84)
    elif sys.argv[1] == "-h":
        print_help();
    elif len(sys.argv) != 9:
        exit(84)
    elif int(sys.argv[1]) > 3 or int(sys.argv[1]) < 1:
        exit(84)

check_args()
opt = int(sys.argv[1])
xp = int(sys.argv[2])
yp = int(sys.argv[3])
zp = int(sys.argv[4])
xv = int(sys.argv[5])
yv = int(sys.argv[6])
zv = int(sys.argv[7])
p = int(sys.argv[8])

if (opt == 1):
    print("Sphere of radius", p, end = "\n")
    sphere(xp, yp, zp, xv, yv, zv, p)

elif (opt == 2):
    print("Cylinder of radius", p, end = "\n")
    cylinder(xp, yp, zp, xv, yv, zv, p)

else:
    print("Cone with a", p, "degree angle", end = "\n")
    cone(xp, yp, zp, xv, yv, zv, p)
